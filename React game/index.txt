1.state
    state:바뀔 여지가 있는 부분이 상태(state)이다.
    setState: 상태를 바꾸고 싶을 때 
 
2. jquery 였다면 $('button').text('Liked')와 같이 직접 바꿔줘야한다.

3. JSX와 바벨(babel)
    원시적인 코드에서는 가독성이 안좋았기때문에 JSX로 가독성을 높였다.
    script 코드에서는 jsx (js + xml)문법을 지원하지 않기 때문에 문제가 생김 -> 바벨을 사용


4. setState가 일어나면 render가 다시 실행된다.

5. react hooks (함수)
    this.state = {} 를 [state, setState] = useState()로 변경
    ref -> React.useRef()

6. 웹팩 https://webpack.js.org/concepts/
    설치 과정
    터미널에서 npm init (노드가 설치 되어있어야함)
    (노드는 서버가 아닌 자바스크립트 실행기라고 생각)
    package.json 파일이 생김
    npm i react react-dom를 설치
    npm i -D webpack webpack-cli를 설치 (-D는 개발용으로 웹팩을 사용한다는 뜻)
    webpack.config.js 파일 생성
    client.jsx 파일을 만든다
    (여기 까지 리액트의 기본 설정 방법이다)
    (cra를 사용하면 이것을 한번에 자동화)

    webpack.config.js를 설정해준 다음 터미널에 
    
    webpack 명령어를 설정해준다(package.json)
    npm run dev를 쳐주면 됨

    webpack이 jsx를 인식하지 못함
    바벨(바벨안의 jsx도 설정)을 설정해줘야함

    바벨 설치: npm i -D @babel/core @babel/preset-env @babel/preset-react babel-loader

@babel/preset-env와 plugins
    preset이란 plugins의 모음이다


웹팩 데브 서버와 핫 리로딩
    기존 리로딩햇을 때 기존 데이터가 날아가는데
    핫 리로딩은 그렇지 않다

    핫리로딩하는 패키지 설치
    npm i react-refresh @pmmmwh/react-refresh-webpack-plugin - D
    
    개발용 서버 설치
    npm i -D webpack-dev-server

import와 require 비교
    require는 노드의 모듈 시스템
    moudle.exports를 하면 다른 파일에서 읽어올 수 있다.

    import {} from '' -> {}는 구조 분해 문법
    exports되는게 객체나 배열이면 구조 분해할 수 있다. (default로 export 안한 애들)
    ex)
    export const hello = 'hello'; -> import { hello }
    export default hello;         -> import hello

map
    배열.map((value) => {})
    {['사과', '바나나', '포도'].map((value, index) => {
        return (
            <li>{value}</li>
        )
    })
    출력
    <li>사과</li>
    <li>바나나</li>
    <li>포도</li>

attribute, props
    HTML 태그
    <div value=value><div> : HTML에서 value를 attribute로 불림

    jsx 컴포넌트
    <Try value={value} /> : jsx에서 value를 props로 불림


랜더링 최적화
    state가 바꼈는지 인지

    shouldComponentUpdate(nextProps, nextState, nextContext)

    PureComponent (클래스)

    React.memo (함수)

React.createRef 


props 와 state 연결
    props는 자식에서 바꾸면 안된다(부모에서 바꿔야한다.)